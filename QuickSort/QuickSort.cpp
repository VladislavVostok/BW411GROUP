#include <iostream> #include <vector>  using namespace std;  void printArr(const vector<int>& numbers) {     cout << "[ ";     for (int i : numbers)     {         cout << i << " ";     }     cout << " ]"; }   // Функция для быстрой сортировки vector<int> quickSort(const vector<int>& numbers) {       if (numbers.size() < 2) {         return numbers; // Базовый случай: если массив состоит из 0 или 1 элемента, он уже отсортирован     }      printArr(numbers);     cout << endl;      // Выбираем опорный элемент (pivot)     int pivot = numbers[numbers.size() / 2]; // Опорный элемент выбирается как элемент из середины массива     vector<int> left, right; // Два массива для элементов, меньших и больших опорного      // Разделение элементов на меньше и больше опорного     for (int num : numbers) { // Проходим по всем элементам массива         if (num < pivot) {             left.push_back(num); // Добавляем элементы, меньшие опорного, в массив left         }         else if (num > pivot) {             right.push_back(num); // Добавляем элементы, большие опорного, в массив right         }         // Равные pivot элементы игнорируются, так как они автоматически включатся позже     }      // Рекурсивная сортировка левой и правой частей, добавление опорного элемента     vector<int> sortedLeft = quickSort(left); // Рекурсивно сортируем левую часть     vector<int> sortedRight = quickSort(right); // Рекурсивно сортируем правую часть      printArr(sortedLeft); printArr(sortedRight);     cout << endl;      // Слияние отсортированных частей     sortedLeft.push_back(pivot); // Добавляем опорный элемент в конец отсортированной левой части     sortedLeft.insert(sortedLeft.end(), sortedRight.begin(), sortedRight.end()); // Добавляем отсортированную правую часть          printArr(sortedLeft);     cout << endl;          return sortedLeft; // Возвращаем результат: объединенный отсортированный массив }   int main() {     vector<int> numbers = { 10, 7,23,6745,1,4,5634,21,7, 8, 9, 1, 5 };      cout << "Исходный массив: ";     for (int num : numbers) {         cout << num << " ";     }     cout << endl;      // Сортировка массива     vector<int> sortedNumbers = quickSort(numbers);      cout << "Отсортированный массив: ";     for (int num : sortedNumbers) {         cout << num << " ";     }     cout << endl;      return 0; }